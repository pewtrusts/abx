@import '@Project/css/variable.scss';
:root {
    --max-container-height: 800px;
    --active-max-height: 368px;
    --discontinued-max-height: 368px;
    --squat-active-proportion: 50vh;
    --squat-discontinued-proportion: 50vh;
    --unit-dimension: 30px;
    --header-height: 45px;
    --unit-padding: 2px;
}
:global(#viz-view) {
    display: flex;
    justify-content: flex-end; 
    @media screen and (max-width: 719px){
            flex-direction: column;
        }
}  
.container { 
        width: calc(100% - 65px);
    min-width: calc(320px - 2.25em);
    .squat & {
    }
    @media screen and (max-width: 719px){
        width: 100%;
    }
}

.superSquat :global(.rich-text #pew-app .abx-legend){
    margin: 10px 0 0;
}
.superSquat :global(.rich-text #abx-totals) {
    margin-top: 0;
}
.activeContainer {
    .squat & {
      //  height: calc(var(--squat-active-proportion) - var(--unit-dimension) / 2);
    }
    display: flex;
}
.headerContainer {
    background-color: $medium_red;
    display: flex;
    height: var(--header-height);
    align-items: center;
    position: relative;
    margin-bottom: calc( var(--unit-dimension) + var(--unit-padding) );
    .squat & {
        height: calc( var(--header-height) * 0.7 );
        margin-bottom: calc( var(--unit-dimension) * 0.7 );
        &::after {
            height: calc(var(--unit-dimension) * 0.7);
            line-height: 135%;
 
        }
    }
    &::after {
        display: block;
        position: absolute;
        width: 100%;
        height: var(--unit-dimension);
        content: 'Discontinued';
        background-color: $light_red;
        color: $medium_red;
        top: 100%;
        text-align: center;
        font-style: italic;
        font-size: .85em;
        font-weight: bold;
        line-height: 200%;
        left: 0;
    }
}
.discontinuedContainer {
    display: flex;
    .squat & {
    //    height: calc(var(--squat-discontinued-proportion) - var(--unit-dimension) / 2);
    }
}
.column {
    display: flex;
    flex-grow: 1;
    margin: 0 2px;
    .squat & {
        margin: 0 4px;
    }
    .activeContainer & {
        flex-wrap: wrap-reverse;
        align-items: flex-end;
    }
    .discontinuedContainer & {
        flex-wrap: wrap;
    }
    @media screen and (max-width: 399px){
        margin: 0 !important;
    }
}
.drug {
    width: 100%;
    height: var(--unit-dimension);
    margin-right: var(--unit-padding);
    background-color: transparent;
    position: relative;
    border: 2px solid transparent;
    transition: transform 0s ease-in-out;
    .superSquat & {
        height: calc(var(--unit-dimension) * 0.9);
    }
    &:not(.drugEmpty){
        background-color: $gray;
        border-collapse: $gray;
    }
    .activeContainer & {
        margin-bottom: var(--unit-padding);
    }
    .discontinuedContainer & {
        margin-top: var(--unit-padding);
    }
    .discontinuedContainer & {
        &:not(.isTranslated){
            &:not(.drugEmpty) {
                border-color: lighten($gray, 10%);
                background-color: lighten($gray, 10%);
            }
            &.novel {
                background-color: lighten($green, 15%);
                border-color: lighten($green, 15%);
            }
            &.urgent {
                border-color: desaturate(lighten($dark_blue, 40%), 40%);
            }
            &.gramNegative::after {
                color: lighten($medium_blue, 15%);
            }
        }
    }
    &.wasDiscontinued.isTranslated {
        &:not(.drugEmpty) {
            border-color: lighten($gray, 10%);
            background-color: lighten($gray, 10%);
        }
        &.novel {
            background-color: lighten($green, 15%);
            border-color: lighten($green, 15%);
        }
        &.urgent {
            border-color: desaturate(lighten($dark_blue, 40%), 40%);
        }
        &.gramNegative::after {
            color: lighten($medium_blue, 15%);
        }   
    }
    .squat & {
        width: calc(50% - var(--unit-padding));
    }
    &.novel {
        background-color: $green;
        border-color: $green;
    }
    &.urgent {
        border-color: $dark_blue;
    }
    &.gramNegative::after {
        content: 'Gâ€“';
        color: $medium_blue;
        display: block;
        position: absolute;
        top: 2px;
        right: 10px;
        font-weight: 600;
        font-size: 0.85em;
        @media screen and (max-width: 719px){
            right: 2px;
        }
        @media screen and (max-width: 399px){
            right: 0px;
            font-size: 0.75em;
        }
        
    }

    &.isMoving, &.hasMovedBackward {
        z-index: 1;
        &:not(.drugEmpty)::before {
            opacity: 1;
        }
    }
    &:not(.drugEmpty)::before {
      content: '';
      position: absolute;
      z-index: -1;
      width: 100%;
      height: 100%;
      opacity: 0;
      box-shadow: 5px 5px 5px rgba(0,0,0,0.3);
      transition: opacity 0.3s ease-in-out;
    }
    
    
}

.headerDiv {
    color: #fff;
    font-weight: 900;
    font-size: .85em;
    width: 20%;
    text-align: center;
    vertical-align: middle;
    display: flex;
    flex-direction: column;
    justify-content: center;
    height: var(--header-height);
    position: relative;
    transition: background-color 0.2s ease-in-out;
    .squat & {
        height: calc( var(--header-height) * 0.7 );
    }
    .superSquat & {
        font-size: 0.65em;
        height: auto;
        line-height: 200%;
    }
    span {
        //display: block;
        border-right: 1px solid #fff;
        width: 100%;
        height: var(--unit-dimension);
        line-height: var(--unit-dimension);
        //background-color: $medium_red;
    }
    &:last-child span {
        border-width: 0;
    }
    &.isAnimating {
            background-color: $red;
    }
}

.phaseFull {
    @media screen and (max-width: 820px) {
        display: none;
    }
}
.phaseAbbr {
    display: none;
     @media screen and (max-width: 820px) {
        display: block;
    }
}

.controlContainer {
    display: flex;
    flex-wrap: wrap;
    width: 65px;
    align-content: flex-start;
    position: relative;
    @media screen and (max-width: 719px){
            width: 100%;
            margin-bottom: 10px;
            right: 10px;

            //justify-content: space-between;
        }

}
.playButton, .yearButton {
    appearance: none;
    border: none;
    background-color: transparent;
    padding: 0;
    margin: 0;
    width: 40px;
    height: 34px;
    cursor: pointer;
    position: relative;
    &:disabled {
        cursor: not-allowed;
    }
    @media screen and (max-width: 719px){
         &.yearButton {
             width: 50px;
            bottom: 1px;
        }
    }
}
.inputWrapper {
    @media screen and (max-width: 719px){
        position: relative;
        top: 5px;
        margin-left: 10px;
        label {
            position: relative;
            bottom: 1px;
            margin-left: 5px;
        }
    }
}
@keyframes pauseSpinner {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.playButton {
    
    background: inline('play-button.min.svg') no-repeat center;
    background-size: contain;
    &.pause {
        background-image: inline('play-button--pause.min.svg')
    }
    &.replay {
        background-image: inline('replay-button.min.svg');
    }
    &.willPause {
        animation: pauseSpinner 0.5s infinite linear;
        cursor: wait;
    }
}

.yearButton {
    font-size: .80em;
    font-weight: 600;
    position: relative;
    color: $dark_gray;
    transition: color 0.2s ease-in-out;
    
    &.yearButtonActive/*, &.yearButtonPrevious*/ {
        color: #333;
        font-weight: 900;
        cursor: not-allowed;
        &::before {
            content: '';
            position: absolute;
            display: block;
            left: auto;
            top: auto;
            width: 100%;
            border-radius: 0;
            height: 2px;
            bottom: 0;
            background-color: $medium_red;
            @media screen and (max-width: 719px){
            }
        }
       
        
    }
    
    &:not(.yearButtonActive):hover, &:not(.yearButtonActive):focus {
        color: $medium_blue;
        font-weight: 900;
    }

}
.inputLabel {
        font-size: .80em;
        font-weight: 600;
        color: #9b9b9b;
}
